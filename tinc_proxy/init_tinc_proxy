#!/bin/sh
VPN_SERVER=XX.XX.XX.XX
VPN_NETWORK=192.168.100.0/24
VPN_GATEWAY=192.168.100.1
VPN_INTERFACE=chionvpn
BYPASS_LAN=1
ROUTE_TABLE=200
MARK_VALUE=200
BYPASS=('192.168.0.0/16')
CHN_ROUTE=/etc/chn_route.list
SETNAME=chn_route

/usr/bin/stop_tinc_proxy

#Create CHN_ROUTE set
ipset create $SETNAME hash:net
while read line; do
	ipset add $SETNAME $line;
done < $CHN_ROUTE
ipset add $SETNAME $VPN_SERVER
ipset add $SETNAME $VPN_NETWORK
ipset add $SETNAME 127.0.0.1
if [ $BYPASS_LAN -eq 1 ]; then
	ipset add $SETNAME 10.0.0.0/8
	ipset add $SETNAME 172.16.0.0/12
	ipset add $SETNAME 192.168.0.0/16
fi

#Add route table 
ip route flush table $ROUTE_TABLE
ip route add default via $VPN_GATEWAY dev $VPN_INTERFACE table $ROUTE_TABLE
ip rule add fwmark $MARK_VALUE table $ROUTE_TABLE

#Add iptables rules
iptables -t mangle -N tinc_proxy

for bypass_addr in ${BYPASS[@]}; do
	iptables -t mangle -A tinc_proxy -d $bypass_addr -j RETURN
done


iptables -t mangle -A tinc_proxy -m set --match-set $SETNAME dst -j RETURN
iptables -t mangle -A tinc_proxy -j CONNMARK --restore-mark
iptables -t mangle -A tinc_proxy -m mark --mark 0 -j MARK --set-mark $MARK_VALUE
iptables -t mangle -A tinc_proxy -j CONNMARK --save-mark

iptables -t mangle -I PREROUTING -j tinc_proxy
iptables -t mangle -I OUTPUT -j tinc_proxy

iptables -t nat -I POSTROUTING -o $VPN_INTERFACE -j MASQUERADE

#Set rp_filter
echo 2 > /proc/sys/net/ipv4/conf/$VPN_INTERFACE/rp_filter

